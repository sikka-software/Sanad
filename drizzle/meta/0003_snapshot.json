{
  "id": "851a6f27-83c1-4302-aca0-353fcc1145d9",
  "prevId": "b57f258e-454b-4b55-94d2-a91303326ca3",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.audit_log_entries": {
      "name": "audit_log_entries",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        }
      },
      "indexes": {
        "audit_logs_instance_id_idx": {
          "name": "audit_logs_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.clients": {
      "name": "clients",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "clients_email_idx": {
          "name": "clients_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_name_idx": {
          "name": "clients_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_user_id_idx": {
          "name": "clients_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update their own clients": {
          "name": "Users can update their own clients",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can read their own clients": {
          "name": "Users can read their own clients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can insert their own clients": {
          "name": "Users can insert their own clients",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can delete their own clients": {
          "name": "Users can delete their own clients",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.employees": {
      "name": "employees",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "first_name": {
          "name": "first_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "position": {
          "name": "position",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "department": {
          "name": "department",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "hire_date": {
          "name": "hire_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "salary": {
          "name": "salary",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "employees_email_unique": {
          "name": "employees_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.flow_state": {
      "name": "flow_state",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "auth_code": {
          "name": "auth_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge_method": {
          "name": "code_challenge_method",
          "type": "code_challenge_method",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge": {
          "name": "code_challenge",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_type": {
          "name": "provider_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_access_token": {
          "name": "provider_access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_refresh_token": {
          "name": "provider_refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "auth_code_issued_at": {
          "name": "auth_code_issued_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "flow_state_created_at_idx": {
          "name": "flow_state_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_auth_code": {
          "name": "idx_auth_code",
          "columns": [
            {
              "expression": "auth_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_id_auth_method": {
          "name": "idx_user_id_auth_method",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "authentication_method",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.identities": {
      "name": "identities",
      "schema": "auth",
      "columns": {
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "identity_data": {
          "name": "identity_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "lower((identity_data ->> 'email'::text))",
            "type": "stored"
          }
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {
        "identities_email_idx": {
          "name": "identities_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "identities_user_id_idx": {
          "name": "identities_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "identities_user_id_fkey": {
          "name": "identities_user_id_fkey",
          "tableFrom": "identities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "identities_provider_id_provider_unique": {
          "name": "identities_provider_id_provider_unique",
          "nullsNotDistinct": false,
          "columns": [
            "provider_id",
            "provider"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.instances": {
      "name": "instances",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "raw_base_config": {
          "name": "raw_base_config",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoice_items": {
      "name": "invoice_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "invoice_items_invoice_id_idx": {
          "name": "invoice_items_invoice_id_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoice_items_invoice_id_fkey": {
          "name": "invoice_items_invoice_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoice_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update invoice items through invoices": {
          "name": "Users can update invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n     FROM invoices\n    WHERE ((invoices.id = invoice_items.invoice_id) AND (invoices.user_id = auth.uid()))))"
        },
        "Users can read invoice items through invoices": {
          "name": "Users can read invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can insert invoice items through invoices": {
          "name": "Users can insert invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can delete invoice items through invoices": {
          "name": "Users can delete invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "((subtotal * tax_rate) / (100)::numeric)",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(subtotal + ((subtotal * tax_rate) / (100)::numeric))",
            "type": "stored"
          }
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "invoices_client_id_idx": {
          "name": "invoices_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_status_idx": {
          "name": "invoices_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_user_id_idx": {
          "name": "invoices_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_client_id_fkey": {
          "name": "invoices_client_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "clients",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update their own invoices": {
          "name": "Users can update their own invoices",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can read their own invoices": {
          "name": "Users can read their own invoices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can insert their own invoices": {
          "name": "Users can insert their own invoices",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can delete their own invoices": {
          "name": "Users can delete their own invoices",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "invoices_status_check": {
          "name": "invoices_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'sent'::text, 'paid'::text, 'overdue'::text, 'cancelled'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "auth.mfa_amr_claims": {
      "name": "mfa_amr_claims",
      "schema": "auth",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mfa_amr_claims_session_id_fkey": {
          "name": "mfa_amr_claims_session_id_fkey",
          "tableFrom": "mfa_amr_claims",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_amr_claims_session_id_authentication_method_pkey": {
          "name": "mfa_amr_claims_session_id_authentication_method_pkey",
          "nullsNotDistinct": false,
          "columns": [
            "session_id",
            "authentication_method"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_challenges": {
      "name": "mfa_challenges",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": true
        },
        "otp_code": {
          "name": "otp_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_session_data": {
          "name": "web_authn_session_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "mfa_challenge_created_at_idx": {
          "name": "mfa_challenge_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_challenges_auth_factor_id_fkey": {
          "name": "mfa_challenges_auth_factor_id_fkey",
          "tableFrom": "mfa_challenges",
          "tableTo": "mfa_factors",
          "schemaTo": "auth",
          "columnsFrom": [
            "factor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_factors": {
      "name": "mfa_factors",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "friendly_name": {
          "name": "friendly_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "factor_type": {
          "name": "factor_type",
          "type": "factor_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "factor_status",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_challenged_at": {
          "name": "last_challenged_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_credential": {
          "name": "web_authn_credential",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_aaguid": {
          "name": "web_authn_aaguid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "factor_id_created_at_idx": {
          "name": "factor_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_friendly_name_unique": {
          "name": "mfa_factors_user_friendly_name_unique",
          "columns": [
            {
              "expression": "friendly_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "(TRIM(BOTH FROM friendly_name) <> ''::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_id_idx": {
          "name": "mfa_factors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unique_phone_factor_per_user": {
          "name": "unique_phone_factor_per_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "phone",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_factors_user_id_fkey": {
          "name": "mfa_factors_user_id_fkey",
          "tableFrom": "mfa_factors",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_factors_last_challenged_at_key": {
          "name": "mfa_factors_last_challenged_at_key",
          "nullsNotDistinct": false,
          "columns": [
            "last_challenged_at"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.one_time_tokens": {
      "name": "one_time_tokens",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_type": {
          "name": "token_type",
          "type": "one_time_token_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "relates_to": {
          "name": "relates_to",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "one_time_tokens_relates_to_hash_idx": {
          "name": "one_time_tokens_relates_to_hash_idx",
          "columns": [
            {
              "expression": "relates_to",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_token_hash_hash_idx": {
          "name": "one_time_tokens_token_hash_hash_idx",
          "columns": [
            {
              "expression": "token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_user_id_token_type_key": {
          "name": "one_time_tokens_user_id_token_type_key",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "token_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "one_time_tokens_user_id_fkey": {
          "name": "one_time_tokens_user_id_fkey",
          "tableFrom": "one_time_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "one_time_tokens_token_hash_check": {
          "name": "one_time_tokens_token_hash_check",
          "value": "char_length(token_hash) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.products": {
      "name": "products",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "sku": {
          "name": "sku",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "stock_quantity": {
          "name": "stock_quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "products_sku_key": {
          "name": "products_sku_key",
          "nullsNotDistinct": false,
          "columns": [
            "sku"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "user_settings": {
          "name": "user_settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscribed_to": {
          "name": "subscribed_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_fkey": {
          "name": "profiles_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_username_key": {
          "name": "profiles_username_key",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        }
      },
      "policies": {
        "Admin full access": {
          "name": "Admin full access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ],
          "using": "true"
        },
        "Users can delete their own profile": {
          "name": "Users can delete their own profile",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create their own profile": {
          "name": "Users can create their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Public profiles are viewable": {
          "name": "Public profiles are viewable",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quote_items": {
      "name": "quote_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "quote_id": {
          "name": "quote_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "quote_items_quote_id_idx": {
          "name": "quote_items_quote_id_idx",
          "columns": [
            {
              "expression": "quote_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quote_items_quote_id_fkey": {
          "name": "quote_items_quote_id_fkey",
          "tableFrom": "quote_items",
          "tableTo": "quotes",
          "columnsFrom": [
            "quote_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update quote items through quotes": {
          "name": "Users can update quote items through quotes",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n     FROM quotes\n    WHERE ((quotes.id = quote_items.quote_id) AND (quotes.user_id = auth.uid()))))"
        },
        "Users can read quote items through quotes": {
          "name": "Users can read quote items through quotes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can insert quote items through quotes": {
          "name": "Users can insert quote items through quotes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can delete quote items through quotes": {
          "name": "Users can delete quote items through quotes",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quotes": {
      "name": "quotes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "quote_number": {
          "name": "quote_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "expiry_date": {
          "name": "expiry_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "((subtotal * tax_rate) / (100)::numeric)",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(subtotal + ((subtotal * tax_rate) / (100)::numeric))",
            "type": "stored"
          }
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "quotes_client_id_idx": {
          "name": "quotes_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_status_idx": {
          "name": "quotes_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_user_id_idx": {
          "name": "quotes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quotes_client_id_fkey": {
          "name": "quotes_client_id_fkey",
          "tableFrom": "quotes",
          "tableTo": "clients",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update their own quotes": {
          "name": "Users can update their own quotes",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can read their own quotes": {
          "name": "Users can read their own quotes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can insert their own quotes": {
          "name": "Users can insert their own quotes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can delete their own quotes": {
          "name": "Users can delete their own quotes",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "quotes_status_check": {
          "name": "quotes_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'sent'::text, 'accepted'::text, 'rejected'::text, 'expired'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "auth.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "parent": {
          "name": "parent",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "refresh_tokens_instance_id_idx": {
          "name": "refresh_tokens_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_instance_id_user_id_idx": {
          "name": "refresh_tokens_instance_id_user_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_parent_idx": {
          "name": "refresh_tokens_parent_idx",
          "columns": [
            {
              "expression": "parent",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_session_id_revoked_idx": {
          "name": "refresh_tokens_session_id_revoked_idx",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            },
            {
              "expression": "revoked",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_updated_at_idx": {
          "name": "refresh_tokens_updated_at_idx",
          "columns": [
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_session_id_fkey": {
          "name": "refresh_tokens_session_id_fkey",
          "tableFrom": "refresh_tokens",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "refresh_tokens_token_unique": {
          "name": "refresh_tokens_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.saml_providers": {
      "name": "saml_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_xml": {
          "name": "metadata_xml",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_url": {
          "name": "metadata_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "attribute_mapping": {
          "name": "attribute_mapping",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "name_id_format": {
          "name": "name_id_format",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_providers_sso_provider_id_idx": {
          "name": "saml_providers_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_providers_sso_provider_id_fkey": {
          "name": "saml_providers_sso_provider_id_fkey",
          "tableFrom": "saml_providers",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "saml_providers_entity_id_key": {
          "name": "saml_providers_entity_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "entity_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "entity_id not empty": {
          "name": "entity_id not empty",
          "value": "char_length(entity_id) > 0"
        },
        "metadata_url not empty": {
          "name": "metadata_url not empty",
          "value": "(metadata_url = NULL::text) OR (char_length(metadata_url) > 0)"
        },
        "metadata_xml not empty": {
          "name": "metadata_xml not empty",
          "value": "char_length(metadata_xml) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.saml_relay_states": {
      "name": "saml_relay_states",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "for_email": {
          "name": "for_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "redirect_to": {
          "name": "redirect_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "flow_state_id": {
          "name": "flow_state_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_relay_states_created_at_idx": {
          "name": "saml_relay_states_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_for_email_idx": {
          "name": "saml_relay_states_for_email_idx",
          "columns": [
            {
              "expression": "for_email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_sso_provider_id_idx": {
          "name": "saml_relay_states_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_relay_states_flow_state_id_fkey": {
          "name": "saml_relay_states_flow_state_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "flow_state",
          "schemaTo": "auth",
          "columnsFrom": [
            "flow_state_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "saml_relay_states_sso_provider_id_fkey": {
          "name": "saml_relay_states_sso_provider_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "request_id not empty": {
          "name": "request_id not empty",
          "value": "char_length(request_id) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.schema_migrations": {
      "name": "schema_migrations",
      "schema": "auth",
      "columns": {
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sessions": {
      "name": "sessions",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "aal": {
          "name": "aal",
          "type": "aal_level",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": false
        },
        "not_after": {
          "name": "not_after",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "refreshed_at": {
          "name": "refreshed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ip": {
          "name": "ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "tag": {
          "name": "tag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sessions_not_after_idx": {
          "name": "sessions_not_after_idx",
          "columns": [
            {
              "expression": "not_after",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_user_id_idx": {
          "name": "sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_created_at_idx": {
          "name": "user_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_fkey": {
          "name": "sessions_user_id_fkey",
          "tableFrom": "sessions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sso_domains": {
      "name": "sso_domains",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_domains_domain_idx": {
          "name": "sso_domains_domain_idx",
          "columns": [
            {
              "expression": "lower(domain)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sso_domains_sso_provider_id_idx": {
          "name": "sso_domains_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sso_domains_sso_provider_id_fkey": {
          "name": "sso_domains_sso_provider_id_fkey",
          "tableFrom": "sso_domains",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "domain not empty": {
          "name": "domain not empty",
          "value": "char_length(domain) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.sso_providers": {
      "name": "sso_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_providers_resource_id_idx": {
          "name": "sso_providers_resource_id_idx",
          "columns": [
            {
              "expression": "lower(resource_id)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "resource_id not empty": {
          "name": "resource_id not empty",
          "value": "(resource_id = NULL::text) OR (char_length(resource_id) > 0)"
        }
      },
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "aud": {
          "name": "aud",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "encrypted_password": {
          "name": "encrypted_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_confirmed_at": {
          "name": "email_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "invited_at": {
          "name": "invited_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_token": {
          "name": "confirmation_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_sent_at": {
          "name": "confirmation_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_token": {
          "name": "recovery_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_sent_at": {
          "name": "recovery_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_token_new": {
          "name": "email_change_token_new",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change": {
          "name": "email_change",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_sent_at": {
          "name": "email_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "raw_app_meta_data": {
          "name": "raw_app_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "raw_user_meta_data": {
          "name": "raw_user_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_super_admin": {
          "name": "is_super_admin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "phone_confirmed_at": {
          "name": "phone_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone_change": {
          "name": "phone_change",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_token": {
          "name": "phone_change_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_sent_at": {
          "name": "phone_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmed_at": {
          "name": "confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "LEAST(email_confirmed_at, phone_confirmed_at)",
            "type": "stored"
          }
        },
        "email_change_token_current": {
          "name": "email_change_token_current",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "email_change_confirm_status": {
          "name": "email_change_confirm_status",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "banned_until": {
          "name": "banned_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reauthentication_token": {
          "name": "reauthentication_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "reauthentication_sent_at": {
          "name": "reauthentication_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_sso_user": {
          "name": "is_sso_user",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "confirmation_token_idx": {
          "name": "confirmation_token_idx",
          "columns": [
            {
              "expression": "confirmation_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((confirmation_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_current_idx": {
          "name": "email_change_token_current_idx",
          "columns": [
            {
              "expression": "email_change_token_current",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_current)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_new_idx": {
          "name": "email_change_token_new_idx",
          "columns": [
            {
              "expression": "email_change_token_new",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_new)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "reauthentication_token_idx": {
          "name": "reauthentication_token_idx",
          "columns": [
            {
              "expression": "reauthentication_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((reauthentication_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recovery_token_idx": {
          "name": "recovery_token_idx",
          "columns": [
            {
              "expression": "recovery_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((recovery_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_partial_key": {
          "name": "users_email_partial_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "(is_sso_user = false)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_email_idx": {
          "name": "users_instance_id_email_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            },
            {
              "expression": "null",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_idx": {
          "name": "users_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_is_anonymous_idx": {
          "name": "users_is_anonymous_idx",
          "columns": [
            {
              "expression": "is_anonymous",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_phone_key": {
          "name": "users_phone_key",
          "nullsNotDistinct": false,
          "columns": [
            "phone"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "users_email_change_confirm_status_check": {
          "name": "users_email_change_confirm_status_check",
          "value": "(email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {
    "auth.aal_level": {
      "name": "aal_level",
      "schema": "auth",
      "values": [
        "aal1",
        "aal2",
        "aal3"
      ]
    },
    "auth.code_challenge_method": {
      "name": "code_challenge_method",
      "schema": "auth",
      "values": [
        "s256",
        "plain"
      ]
    },
    "auth.factor_status": {
      "name": "factor_status",
      "schema": "auth",
      "values": [
        "unverified",
        "verified"
      ]
    },
    "auth.factor_type": {
      "name": "factor_type",
      "schema": "auth",
      "values": [
        "totp",
        "webauthn",
        "phone"
      ]
    },
    "auth.one_time_token_type": {
      "name": "one_time_token_type",
      "schema": "auth",
      "values": [
        "confirmation_token",
        "reauthentication_token",
        "recovery_token",
        "email_change_token_new",
        "email_change_token_current",
        "phone_change_token"
      ]
    }
  },
  "schemas": {
    "auth": "auth"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}